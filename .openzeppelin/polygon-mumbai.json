{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x5522Ff34d6DC2FB819ceEf88a77C9d3c4eCC3b96",
    "txHash": "0x96bf50fe6141a5bbeb585b47de771a1a04c5c14efa9201b36f64bc2da55f15d6"
  },
  "proxies": [
    {
      "address": "0x45C04Fb13Ac00A3E10036f0048001c7fd75c4Aa8",
      "txHash": "0xbf192f7d8f0c2d6d9b1d94252362f7b79f2633c4c9ce8736d49cbca07bcc74dc",
      "kind": "transparent"
    },
    {
      "address": "0x10D48830C501264d34f5A81DBea6DCFF5C2c00D0",
      "txHash": "0x2ab6c74c54442316e26f4421719ca57d17b84e8da2b0d7bec036c29674f6dc57",
      "kind": "transparent"
    },
    {
      "address": "0x6b6b6Bde6Cf6270aeaC5f8c1eC2E240DA9e31e4D",
      "txHash": "0x723e3dc7080d8c0a8dfcc9b65eb13bd1cbd1650438ef72d8ced201f03d9bee12",
      "kind": "transparent"
    },
    {
      "address": "0x0E7b55d86fEa0e04Cd9a7827E9885f13d3722C56",
      "txHash": "0x845fbe6a2b52399ebe8fc86610858ba2b0d29dc665b5fe31fee2a596c4776769",
      "kind": "transparent"
    }
  ],
  "impls": {
    "47377668b0c7fee9e47bb5cb02553ede14cf12ce4f33e837b664ca1841d7036c": {
      "address": "0x4ec49999F462b0ba0f370F952554bc734ae89204",
      "txHash": "0x64af12d4db88f4f7d56a59f8440db34eab0cc89591bebdbd721c2ca96e89811d",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "151",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "152",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:517"
          },
          {
            "label": "baseURI",
            "offset": 0,
            "slot": "201",
            "type": "t_string_storage",
            "contract": "TaxNFT",
            "src": "contracts/TaxNFT.sol:12"
          },
          {
            "label": "tokenIpfsHash",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "TaxNFT",
            "src": "contracts/TaxNFT.sol:13"
          },
          {
            "label": "minter",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "TaxNFT",
            "src": "contracts/TaxNFT.sol:14"
          },
          {
            "label": "taxSplit",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_uint256,t_struct(TaxSplit)4252_storage)",
            "contract": "TaxNFT",
            "src": "contracts/TaxNFT.sol:21"
          },
          {
            "label": "tokenIndex",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "TaxNFT",
            "src": "contracts/TaxNFT.sol:23"
          },
          {
            "label": "manager",
            "offset": 0,
            "slot": "206",
            "type": "t_address",
            "contract": "TaxNFT",
            "src": "contracts/TaxNFT.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TaxSplit)4252_storage)": {
            "label": "mapping(uint256 => struct TaxNFT.TaxSplit)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(TaxSplit)4252_storage": {
            "label": "struct TaxNFT.TaxSplit",
            "members": [
              {
                "label": "stableTax",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "percentageTax",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "702a6b8b1f64bfc859fd57a31525def82058d15da455b3cc5722933b67cbcf61": {
      "address": "0xb9F003615A040834834ab323581AdAD7DBf3Cb98",
      "txHash": "0xc5c27218ca5f72c4c74f03cd9a6a38587991890e5da1e8c16f73f01aa1925e78",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:25"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:28"
          },
          {
            "label": "_uri",
            "offset": 0,
            "slot": "103",
            "type": "t_string_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_uint256)47_storage",
            "contract": "ERC1155Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/ERC1155Upgradeable.sol:528"
          },
          {
            "label": "manager",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "TaxSemiNFT",
            "src": "contracts/TaxSemiNFT.sol:8"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]",
            "numberOfBytes": "1504"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a92de5ff0681feb96601566ed4cf7b852295872ad6b487c3a22ee427ddc991c8": {
      "address": "0x7b1FbFC2B8A170Ef6635c17beA14EDcdDdc231AF",
      "txHash": "0x1cc0a0ac6529c60b94eae0fc46d57619d8dc875413996968ae239da0aaca0336",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/utils/ERC721HolderUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155ReceiverUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol:31"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1155HolderUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC1155/utils/ERC1155HolderUpgradeable.sol:48"
          },
          {
            "label": "globalSplit",
            "offset": 0,
            "slot": "301",
            "type": "t_uint256",
            "contract": "Manager",
            "src": "contracts/Manager.sol:15"
          },
          {
            "label": "origin",
            "offset": 0,
            "slot": "302",
            "type": "t_contract(ITaxNFT)4777",
            "contract": "Manager",
            "src": "contracts/Manager.sol:17"
          },
          {
            "label": "derivations",
            "offset": 0,
            "slot": "303",
            "type": "t_contract(ITaxSemiNFT)4797",
            "contract": "Manager",
            "src": "contracts/Manager.sol:18"
          },
          {
            "label": "stakedNFTs",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_struct(StakedNFT)4624_storage)",
            "contract": "Manager",
            "src": "contracts/Manager.sol:21"
          },
          {
            "label": "derivationPrice",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Manager",
            "src": "contracts/Manager.sol:23"
          },
          {
            "label": "usedSigNonce",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "contract": "Manager",
            "src": "contracts/Manager.sol:25"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(ITaxNFT)4777": {
            "label": "contract ITaxNFT",
            "numberOfBytes": "20"
          },
          "t_contract(ITaxSemiNFT)4797": {
            "label": "contract ITaxSemiNFT",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(StakedNFT)4624_storage)": {
            "label": "mapping(uint256 => struct IManager.StakedNFT)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(StakedNFT)4624_storage": {
            "label": "struct IManager.StakedNFT",
            "members": [
              {
                "label": "holder",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "stableTax",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "percentageTax",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "approvedGames",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
